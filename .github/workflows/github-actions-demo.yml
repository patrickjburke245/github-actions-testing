name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
  
  build-cli:
    name: build-cli
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: foresitelabs/github-action-lintr
      PROJECT_KEY: default # Set the desired project to run the cli scanning with

    steps:
    # checks-out your repository under $GitHub_WORKSPACE, so your workflow can access it.
    - name: Checkout
      uses: actions/checkout@v2

    # Build your docker image, that is going to be scanned in the next step
    - name: Docker Image Build
      run: docker build -t $IMAGE_NAME .

    # Run Orca CLI against the previously created container image
    - name: Orca CLI - Security Scanning
      env:
        ORCA_SECURITY_API_TOKEN: aHR0cHM6Ly9hcHAudXMub3JjYXNlY3VyaXR5LmlvfHxVMk1HNHhhTGo3RXBPYzZJQW9ib2lGdzJIVUx3ZXVYQw==
      run: |
        set +e
        apt update && apt install -y curl
        curl -sfL 'https://raw.GitHubusercontent.com/orcasecurity/orca-cli/main/install.sh' | bash
        orca-cli -p "${PROJECT_KEY}" image scan ${IMAGE_NAME}